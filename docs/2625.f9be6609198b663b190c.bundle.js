"use strict";(self.webpackChunk_guidebooks_playground=self.webpackChunk_guidebooks_playground||[]).push([[2625],{72625:(e,n,t)=>{t.r(n),t.d(n,{filepathForResponses:()=>d,fetchMarkdownFile:()=>l,default:()=>m});var o=t(8575),i=t(26470),a=t(21030),r=t(72442),s=function(e,n,t,o){return new(t||(t=Promise))((function(i,a){function r(e){try{c(o.next(e))}catch(e){a(e)}}function s(e){try{c(o.throw(e))}catch(e){a(e)}}function c(e){var n;e.done?i(e.value):(n=e.value,n instanceof t?n:new t((function(e){e(n)}))).then(r,s)}c((o=o.apply(e,n||[])).next())}))};const c={command:"commentary",strict:"commentary",example:"commentary -f [<markdown file path>]",docs:"Commentary",optional:[{name:"--title",alias:"-t",docs:"Title for the commentary"},{name:"--base-url",alias:"-b",docs:"Base URL for images"},{name:"--edit",docs:"Open the UI in edit mode"},{name:"--header",docs:"Show header text [Default: true]"},{name:"--preview",docs:"Show a preview while editing [Default: true]"},{name:"--readonly",docs:"Set the enclosing tab to be readonly"},{name:"--send",docs:"Send edits to this channel (implies --no-header and --no-preview)"},{name:"--receive",docs:"Consume edits from this channel (implies --no-header and --no-edit)"},{name:"--replace",docs:"Replace all existing content in this tab"},{name:"--file",alias:"-f",docs:"File that contains the texts"}]};function d(e){return(0,i.join)((0,i.dirname)(e),(0,i.basename)(e).replace(/\..*$/,"")+".json")}function l(e,n){return s(this,void 0,void 0,(function*(){const{pathname:t}=/^https?:/.test(e)?new URL(e):{pathname:e};if(/\.md$/.test(t)){const[t,o]=yield Promise.all([(0,r.O)(e,n),(0,r.O)(d(e),n,!0)]);return{data:"string"==typeof t?t:JSON.stringify(t),codeBlockResponses:"string"==typeof o?JSON.parse(o):o}}throw new Error("File extension not support")}))}function p(e){return s(this,void 0,void 0,(function*(){const{edit:n,header:t,preview:r,receive:s,send:c,title:d,readonly:p,replace:m}=e.parsedOptions,u=e.parsedOptions.file||e.parsedOptions.f,f=void 0===s&&(void 0!==c||n),h=void 0===s&&void 0===c&&t,v=void 0===c&&(void 0!==s||r),{data:y="#",codeBlockResponses:w}=u?yield l(u,e):{data:e.command.trim().slice(e.command.indexOf(" ")+1).trim().replace(/\\n/g,"\n").replace(/\\t/g,"\t").replace(/--(no-)?(header|edit|preview|readonly|replace)\s*/g,"").replace(/(-t|--title|--send|--receive)\s+\S+\s*/g,"").replace(/^\\#/,"#").replace(/^"/,"").replace(/"$/,""),codeBlockResponses:void 0};u&&p&&a.Events.eventBus.emitWithTabId("/kui/tab/edit/unset",(0,a.getPrimaryTabId)(e.tab));const b=e.parsedOptions["base-url"]?(0,i.join)(e.parsedOptions["base-url"],"{filename}"):u?function(e){if(/^http:/.test(e)){const n=new URL(e);return n.pathname=n.pathname.replace((0,i.basename)(n.pathname),"{filename}"),(0,o.format)(n)}return e.replace((0,i.basename)(e),"{filename}")}(u):void 0;if(void 0!==y)return"#"===y||"commentary"===e.command?{apiVersion:"kui-shell/v1",kind:"CommentaryResponse",props:{edit:f,header:h,preview:v,replace:m,receive:s,send:c,title:d,children:"",baseUrl:b}}:{apiVersion:"kui-shell/v1",kind:"CommentaryResponse",props:{edit:f,header:h,preview:v,replace:m,receive:s,send:c,title:d,filepath:u,children:y,codeBlockResponses:w,baseUrl:b}};throw new Error("Insufficient arguments: must specify either --file or -f, or provide a comment on the command line")}))}function m(e){const n={boolean:["edit","header","preview","readonly","replace"]};e.listen("/commentary",p,{usage:c,outputOnly:!0,flags:n}),e.listen("/#",p,{usage:c,outputOnly:!0,noCoreRedirect:!0,flags:n})}},72442:(e,n,t)=>{t.d(n,{O:()=>a});var o=t(21030),i=function(e,n,t,o){return new(t||(t=Promise))((function(i,a){function r(e){try{c(o.next(e))}catch(e){a(e)}}function s(e){try{c(o.throw(e))}catch(e){a(e)}}function c(e){var n;e.done?i(e.value):(n=e.value,n instanceof t?n:new t((function(e){e(n)}))).then(r,s)}c((o=o.apply(e,n||[])).next())}))};function a(e,{REPL:n},t=!1){return i(this,void 0,void 0,(function*(){try{if(/^https:/.test(e))return(yield n.rexec(`_fetchfile ${(0,o.encodeComponent)(e)}`)).content[0];{const t=o.Util.absolute(o.Util.expandHomeDir(e)),i=(yield n.rexec(`vfs fstat ${(0,o.encodeComponent)(t)} --with-data`)).content;if(i.isDirectory)throw new Error("Invalid filepath");return i.data}}catch(e){if(t)return;throw e}}))}}}]);